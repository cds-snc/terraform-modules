provider "aws" {
  region = "ca-central-1"
}

run "test_defaults" {
  command = plan

  variables {
    s3_bucket_name = "a-bucket-that-will-be-scanned-for-malware"
  }

  assert {
    condition     = aws_guardduty_malware_protection_plan.this.protected_resource[0].s3_bucket[0].bucket_name == "a-bucket-that-will-be-scanned-for-malware"
    error_message = "aws_guardduty_malware_protection_plan.this.protected_resource[0].s3_bucket[0].bucket_name did not match expected value"
  }

  assert {
    condition     = aws_guardduty_malware_protection_plan.this.actions[0].tagging[0].status == "ENABLED"
    error_message = "aws_guardduty_malware_protection_plan.this.actions[0].tagging[0].status did not match expected value"
  }
}

run "test_overrides" {
  command = plan

  variables {
    s3_bucket_name     = "another-bucket-that-will-be-scanned-for-malware"
    s3_object_prefixes = ["only-scan-this-folder/"]
    tagging_status     = "DISABLED"
  }

  assert {
    condition     = aws_guardduty_malware_protection_plan.this.protected_resource[0].s3_bucket[0].bucket_name == "another-bucket-that-will-be-scanned-for-malware"
    error_message = "aws_guardduty_malware_protection_plan.this.protected_resource[0].s3_bucket[0].bucket_name did not match expected value"
  }

  assert {
    condition     = aws_guardduty_malware_protection_plan.this.protected_resource[0].s3_bucket[0].object_prefixes == toset(["only-scan-this-folder/"])
    error_message = "aws_guardduty_malware_protection_plan.this.protected_resource[0].s3_bucket[0].object_prefixes did not match expected value"
  }

  assert {
    condition     = aws_guardduty_malware_protection_plan.this.actions[0].tagging[0].status == "DISABLED"
    error_message = "aws_guardduty_malware_protection_plan.this.actions[0].tagging[0].status did not match expected value"
  }
}
