name: "CI unit and integration tests"

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  python-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        module:
          - notify_slack/lambda
          - schedule_shutdown/lambda
    
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        id: changes
        with:
          filters: |
            module:
              - '${{ matrix.module }}/**'
              - '.github/workflows/ci.yml'

      - name: Setup Python
        if: steps.changes.outputs.module == 'true'
        uses: actions/setup-python@b64ffcaf5b410884ad320a9cfac8866006a109aa # v4.8.0
        with:
          python-version: "3.11"

      - name: Python tests
        if: steps.changes.outputs.module == 'true'
        working-directory: ${{ matrix.module }}
        run: |
          make install
          make ARGS=--check fmt
          make lint
          make test

  terraform-test:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ca-central-1
      TERRAFORM_VERSION: 1.6.1
      CONFTEST_VERSION: 0.27.0
    strategy:
      fail-fast: false
      matrix:
        module:
          - athena_access_logs
          - client_vpn
          - gh_oidc_role
          - notify_slack
          - schedule_shutdown
          - rds
          - vpc

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        id: changes
        with:
          filters: |
            module:
              - '${{ matrix.module }}/**/*.tf'
              - '${{ matrix.module }}/tests/**'
              - '.github/workflows/ci.yml'

      - name: Configure AWS credentials using OIDC
        if: steps.changes.outputs.module == 'true'
        uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a # v4.0.1
        with:
          role-to-assume: arn:aws:iam::124044056575:role/terraform-modules-test
          role-session-name: TFTest
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform tools
        if: steps.changes.outputs.module == 'true'
        uses: cds-snc/terraform-tools-setup@v1

      - name: Terraform tests
        if: steps.changes.outputs.module == 'true'
        working-directory: ${{ matrix.module }}
        run: |
          make test
